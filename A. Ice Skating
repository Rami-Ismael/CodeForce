import java.io.*;
import java.util.*;

public class Main {
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static String line;
    static  int n,k,m;
    static StringTokenizer st;
    static Scanner in = new Scanner(System.in);
    static char [] word;
    static int [][] grid = new int[1000][1000];
    static boolean[][] visited  = new boolean[1000][1000];
    public static void main(String[] args) throws IOException {
    n = Integer.parseInt(br.readLine());
    while ((line=br.readLine())!=null&&!line.equals("")){
        st = new StringTokenizer(line);
        grid[Integer.parseInt(st.nextToken())-1][Integer.parseInt(st.nextToken())-1] = 1;
    }
    //find the island
        for (int i=0;i<1000;i++){
            for (int j=0;j<1000;j++){
                if (grid[i][j]==1&&!visited[i][j]){
                    //start the bfs serach method
                    bfs(i,j);
                    k++;
                }
            }
        }
        pw.println(--k);
    pw.flush();
    }
private static int []dx = {-1,0,1,0};
    static int [] dy= {0,1,0,-1};
    private static void bfs(int row, int col) {
        visited[row][col] = true;
        Queue<IntegerPair> queue = new LinkedList<>();
        queue.add(new IntegerPair(row,col));
        while (!queue.isEmpty()){

            IntegerPair u = (IntegerPair)queue.poll();
            for (int j=1;j<999;j++) {
                for (int i = 0; i < 4; i++) {
                    int newRow = u.x + dx[i]*j;
                    int newCol = u.y+dy[i]*j;
                    if (newRow>=0&&newCol<1000&&newCol>=0&&newRow<1000){
                        if (grid[newRow][newCol]==1&&!visited[newRow][newCol])
                        {
                         //   pw.println("adef");
                            queue.add(new IntegerPair(newRow,newCol));
                            visited[newRow][newCol] = true;
                        }
                    }
                }
            }

        }
    }

    public static class IntegerPair{
        int x,y;
        IntegerPair(int x,int y){
            this.x = x;
            this.y = y;
        }
    }
}
