import java.io.*;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {
public static int [] enter;
public static int []exit;
public static boolean [] visted;
static int n;
static int fine;
    public static void main(String[] args) throws IOException {
	// write your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        n = Integer.parseInt(br.readLine());
        exit  = new int[n];
        enter  = new int[n];
        visted = new boolean[n];
        StringTokenizer st = new StringTokenizer(br.readLine());
        for (int i=0;i<n;i++)
            enter[i] = Integer.parseInt(st.nextToken());


         st = new StringTokenizer(br.readLine());
        for (int i=0;i<n;i++)
            exit[i] = Integer.parseInt(st.nextToken());
        int pointerOne =0;
        int PointerTwo =0;
        while (pointerOne<n&&PointerTwo<n){
            //first determine is not meet before
            if (!visted[enter[pointerOne]-1]){
                if (enter[pointerOne]!=exit[PointerTwo]){
                    fine++;
                    visted[exit[PointerTwo]-1] = true;
                    PointerTwo++;
                 //   pw.println(pointerOne);
                }else if (enter[pointerOne]==exit[PointerTwo]){
                    visted[exit[PointerTwo]-1] = true;
                    pointerOne++;
                    PointerTwo++;
                }
            }else
                pointerOne++;
        }
        pw.println(fine);
        pw.flush();

    }
}
