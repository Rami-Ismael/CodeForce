import java.io.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

    public static void main(String[] args) throws IOException {
	// write your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw =new PrintWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int s = Integer.parseInt(st.nextToken());
        int n = Integer.parseInt(st.nextToken());
        IntegerPair [] array = new IntegerPair[n];
        for (int i=0;i<n;i++) {
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            array[i] = new IntegerPair(x,y);
        }
        Arrays.sort(array);
        int i=0;
        while (i<n&&array[i].dragonStrength<s){
            s+=array[i].bonusStrength;
            i++;
        }
        pw.println(i==n?"YES":"NO");
        pw.flush();

    }
    public static class IntegerPair implements Comparable<IntegerPair>{
        int dragonStrength;
        int bonusStrength = 0;
        IntegerPair(int dragonStrength, int bonusStrength){
            this.dragonStrength = dragonStrength;
            this.bonusStrength = bonusStrength;
        }

        @Override
        public int compareTo(IntegerPair integerPair) {
            return this.dragonStrength-integerPair.dragonStrength;
        }

        @Override
        public String toString() {
            return ""+dragonStrength;
        }
    }
}
